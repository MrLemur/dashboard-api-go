/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 01 November, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.39.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkVlanProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkVlanProfileRequest{}

// UpdateNetworkVlanProfileRequest struct for UpdateNetworkVlanProfileRequest
type UpdateNetworkVlanProfileRequest struct {
	// Name of the profile, string length must be from 1 to 255 characters
	Name string `json:"name"`
	// An array of named VLANs
	VlanNames []CreateNetworkVlanProfileRequestVlanNamesInner `json:"vlanNames"`
	// An array of VLAN groups
	VlanGroups []CreateNetworkVlanProfileRequestVlanGroupsInner `json:"vlanGroups"`
}

// NewUpdateNetworkVlanProfileRequest instantiates a new UpdateNetworkVlanProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkVlanProfileRequest(name string, vlanNames []CreateNetworkVlanProfileRequestVlanNamesInner, vlanGroups []CreateNetworkVlanProfileRequestVlanGroupsInner) *UpdateNetworkVlanProfileRequest {
	this := UpdateNetworkVlanProfileRequest{}
	this.Name = name
	this.VlanNames = vlanNames
	this.VlanGroups = vlanGroups
	return &this
}

// NewUpdateNetworkVlanProfileRequestWithDefaults instantiates a new UpdateNetworkVlanProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkVlanProfileRequestWithDefaults() *UpdateNetworkVlanProfileRequest {
	this := UpdateNetworkVlanProfileRequest{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateNetworkVlanProfileRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkVlanProfileRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateNetworkVlanProfileRequest) SetName(v string) {
	o.Name = v
}

// GetVlanNames returns the VlanNames field value
func (o *UpdateNetworkVlanProfileRequest) GetVlanNames() []CreateNetworkVlanProfileRequestVlanNamesInner {
	if o == nil {
		var ret []CreateNetworkVlanProfileRequestVlanNamesInner
		return ret
	}

	return o.VlanNames
}

// GetVlanNamesOk returns a tuple with the VlanNames field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkVlanProfileRequest) GetVlanNamesOk() ([]CreateNetworkVlanProfileRequestVlanNamesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.VlanNames, true
}

// SetVlanNames sets field value
func (o *UpdateNetworkVlanProfileRequest) SetVlanNames(v []CreateNetworkVlanProfileRequestVlanNamesInner) {
	o.VlanNames = v
}

// GetVlanGroups returns the VlanGroups field value
func (o *UpdateNetworkVlanProfileRequest) GetVlanGroups() []CreateNetworkVlanProfileRequestVlanGroupsInner {
	if o == nil {
		var ret []CreateNetworkVlanProfileRequestVlanGroupsInner
		return ret
	}

	return o.VlanGroups
}

// GetVlanGroupsOk returns a tuple with the VlanGroups field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkVlanProfileRequest) GetVlanGroupsOk() ([]CreateNetworkVlanProfileRequestVlanGroupsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.VlanGroups, true
}

// SetVlanGroups sets field value
func (o *UpdateNetworkVlanProfileRequest) SetVlanGroups(v []CreateNetworkVlanProfileRequestVlanGroupsInner) {
	o.VlanGroups = v
}

func (o UpdateNetworkVlanProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkVlanProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["vlanNames"] = o.VlanNames
	toSerialize["vlanGroups"] = o.VlanGroups
	return toSerialize, nil
}

type NullableUpdateNetworkVlanProfileRequest struct {
	value *UpdateNetworkVlanProfileRequest
	isSet bool
}

func (v NullableUpdateNetworkVlanProfileRequest) Get() *UpdateNetworkVlanProfileRequest {
	return v.value
}

func (v *NullableUpdateNetworkVlanProfileRequest) Set(val *UpdateNetworkVlanProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkVlanProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkVlanProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkVlanProfileRequest(val *UpdateNetworkVlanProfileRequest) *NullableUpdateNetworkVlanProfileRequest {
	return &NullableUpdateNetworkVlanProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkVlanProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkVlanProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 22 February, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: v1.31.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20025ProductsWireless The network device to be updated
type InlineResponse20025ProductsWireless struct {
	CurrentVersion *InlineResponse20025ProductsWirelessCurrentVersion `json:"currentVersion,omitempty"`
	LastUpgrade *InlineResponse20025ProductsWirelessLastUpgrade `json:"lastUpgrade,omitempty"`
	NextUpgrade *InlineResponse20025ProductsWirelessNextUpgrade `json:"nextUpgrade,omitempty"`
	// Firmware versions available for upgrade
	AvailableVersions []InlineResponse20025ProductsWirelessAvailableVersions `json:"availableVersions,omitempty"`
	// Whether or not the network wants beta firmware
	ParticipateInNextBetaRelease *bool `json:"participateInNextBetaRelease,omitempty"`
}

// NewInlineResponse20025ProductsWireless instantiates a new InlineResponse20025ProductsWireless object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20025ProductsWireless() *InlineResponse20025ProductsWireless {
	this := InlineResponse20025ProductsWireless{}
	return &this
}

// NewInlineResponse20025ProductsWirelessWithDefaults instantiates a new InlineResponse20025ProductsWireless object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20025ProductsWirelessWithDefaults() *InlineResponse20025ProductsWireless {
	this := InlineResponse20025ProductsWireless{}
	return &this
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *InlineResponse20025ProductsWireless) GetCurrentVersion() InlineResponse20025ProductsWirelessCurrentVersion {
	if o == nil || isNil(o.CurrentVersion) {
		var ret InlineResponse20025ProductsWirelessCurrentVersion
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025ProductsWireless) GetCurrentVersionOk() (*InlineResponse20025ProductsWirelessCurrentVersion, bool) {
	if o == nil || isNil(o.CurrentVersion) {
    return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *InlineResponse20025ProductsWireless) HasCurrentVersion() bool {
	if o != nil && !isNil(o.CurrentVersion) {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given InlineResponse20025ProductsWirelessCurrentVersion and assigns it to the CurrentVersion field.
func (o *InlineResponse20025ProductsWireless) SetCurrentVersion(v InlineResponse20025ProductsWirelessCurrentVersion) {
	o.CurrentVersion = &v
}

// GetLastUpgrade returns the LastUpgrade field value if set, zero value otherwise.
func (o *InlineResponse20025ProductsWireless) GetLastUpgrade() InlineResponse20025ProductsWirelessLastUpgrade {
	if o == nil || isNil(o.LastUpgrade) {
		var ret InlineResponse20025ProductsWirelessLastUpgrade
		return ret
	}
	return *o.LastUpgrade
}

// GetLastUpgradeOk returns a tuple with the LastUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025ProductsWireless) GetLastUpgradeOk() (*InlineResponse20025ProductsWirelessLastUpgrade, bool) {
	if o == nil || isNil(o.LastUpgrade) {
    return nil, false
	}
	return o.LastUpgrade, true
}

// HasLastUpgrade returns a boolean if a field has been set.
func (o *InlineResponse20025ProductsWireless) HasLastUpgrade() bool {
	if o != nil && !isNil(o.LastUpgrade) {
		return true
	}

	return false
}

// SetLastUpgrade gets a reference to the given InlineResponse20025ProductsWirelessLastUpgrade and assigns it to the LastUpgrade field.
func (o *InlineResponse20025ProductsWireless) SetLastUpgrade(v InlineResponse20025ProductsWirelessLastUpgrade) {
	o.LastUpgrade = &v
}

// GetNextUpgrade returns the NextUpgrade field value if set, zero value otherwise.
func (o *InlineResponse20025ProductsWireless) GetNextUpgrade() InlineResponse20025ProductsWirelessNextUpgrade {
	if o == nil || isNil(o.NextUpgrade) {
		var ret InlineResponse20025ProductsWirelessNextUpgrade
		return ret
	}
	return *o.NextUpgrade
}

// GetNextUpgradeOk returns a tuple with the NextUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025ProductsWireless) GetNextUpgradeOk() (*InlineResponse20025ProductsWirelessNextUpgrade, bool) {
	if o == nil || isNil(o.NextUpgrade) {
    return nil, false
	}
	return o.NextUpgrade, true
}

// HasNextUpgrade returns a boolean if a field has been set.
func (o *InlineResponse20025ProductsWireless) HasNextUpgrade() bool {
	if o != nil && !isNil(o.NextUpgrade) {
		return true
	}

	return false
}

// SetNextUpgrade gets a reference to the given InlineResponse20025ProductsWirelessNextUpgrade and assigns it to the NextUpgrade field.
func (o *InlineResponse20025ProductsWireless) SetNextUpgrade(v InlineResponse20025ProductsWirelessNextUpgrade) {
	o.NextUpgrade = &v
}

// GetAvailableVersions returns the AvailableVersions field value if set, zero value otherwise.
func (o *InlineResponse20025ProductsWireless) GetAvailableVersions() []InlineResponse20025ProductsWirelessAvailableVersions {
	if o == nil || isNil(o.AvailableVersions) {
		var ret []InlineResponse20025ProductsWirelessAvailableVersions
		return ret
	}
	return o.AvailableVersions
}

// GetAvailableVersionsOk returns a tuple with the AvailableVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025ProductsWireless) GetAvailableVersionsOk() ([]InlineResponse20025ProductsWirelessAvailableVersions, bool) {
	if o == nil || isNil(o.AvailableVersions) {
    return nil, false
	}
	return o.AvailableVersions, true
}

// HasAvailableVersions returns a boolean if a field has been set.
func (o *InlineResponse20025ProductsWireless) HasAvailableVersions() bool {
	if o != nil && !isNil(o.AvailableVersions) {
		return true
	}

	return false
}

// SetAvailableVersions gets a reference to the given []InlineResponse20025ProductsWirelessAvailableVersions and assigns it to the AvailableVersions field.
func (o *InlineResponse20025ProductsWireless) SetAvailableVersions(v []InlineResponse20025ProductsWirelessAvailableVersions) {
	o.AvailableVersions = v
}

// GetParticipateInNextBetaRelease returns the ParticipateInNextBetaRelease field value if set, zero value otherwise.
func (o *InlineResponse20025ProductsWireless) GetParticipateInNextBetaRelease() bool {
	if o == nil || isNil(o.ParticipateInNextBetaRelease) {
		var ret bool
		return ret
	}
	return *o.ParticipateInNextBetaRelease
}

// GetParticipateInNextBetaReleaseOk returns a tuple with the ParticipateInNextBetaRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025ProductsWireless) GetParticipateInNextBetaReleaseOk() (*bool, bool) {
	if o == nil || isNil(o.ParticipateInNextBetaRelease) {
    return nil, false
	}
	return o.ParticipateInNextBetaRelease, true
}

// HasParticipateInNextBetaRelease returns a boolean if a field has been set.
func (o *InlineResponse20025ProductsWireless) HasParticipateInNextBetaRelease() bool {
	if o != nil && !isNil(o.ParticipateInNextBetaRelease) {
		return true
	}

	return false
}

// SetParticipateInNextBetaRelease gets a reference to the given bool and assigns it to the ParticipateInNextBetaRelease field.
func (o *InlineResponse20025ProductsWireless) SetParticipateInNextBetaRelease(v bool) {
	o.ParticipateInNextBetaRelease = &v
}

func (o InlineResponse20025ProductsWireless) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CurrentVersion) {
		toSerialize["currentVersion"] = o.CurrentVersion
	}
	if !isNil(o.LastUpgrade) {
		toSerialize["lastUpgrade"] = o.LastUpgrade
	}
	if !isNil(o.NextUpgrade) {
		toSerialize["nextUpgrade"] = o.NextUpgrade
	}
	if !isNil(o.AvailableVersions) {
		toSerialize["availableVersions"] = o.AvailableVersions
	}
	if !isNil(o.ParticipateInNextBetaRelease) {
		toSerialize["participateInNextBetaRelease"] = o.ParticipateInNextBetaRelease
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20025ProductsWireless struct {
	value *InlineResponse20025ProductsWireless
	isSet bool
}

func (v NullableInlineResponse20025ProductsWireless) Get() *InlineResponse20025ProductsWireless {
	return v.value
}

func (v *NullableInlineResponse20025ProductsWireless) Set(val *InlineResponse20025ProductsWireless) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20025ProductsWireless) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20025ProductsWireless) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20025ProductsWireless(val *InlineResponse20025ProductsWireless) *NullableInlineResponse20025ProductsWireless {
	return &NullableInlineResponse20025ProductsWireless{value: val, isSet: true}
}

func (v NullableInlineResponse20025ProductsWireless) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20025ProductsWireless) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



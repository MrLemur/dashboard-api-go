/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.38.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkAlertsSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkAlertsSettingsRequest{}

// UpdateNetworkAlertsSettingsRequest struct for UpdateNetworkAlertsSettingsRequest
type UpdateNetworkAlertsSettingsRequest struct {
	DefaultDestinations *UpdateNetworkAlertsSettingsRequestDefaultDestinations `json:"defaultDestinations,omitempty"`
	// Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
	Alerts []UpdateNetworkAlertsSettingsRequestAlertsInner `json:"alerts,omitempty"`
	Muting *UpdateNetworkAlertsSettingsRequestMuting `json:"muting,omitempty"`
}

// NewUpdateNetworkAlertsSettingsRequest instantiates a new UpdateNetworkAlertsSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkAlertsSettingsRequest() *UpdateNetworkAlertsSettingsRequest {
	this := UpdateNetworkAlertsSettingsRequest{}
	return &this
}

// NewUpdateNetworkAlertsSettingsRequestWithDefaults instantiates a new UpdateNetworkAlertsSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkAlertsSettingsRequestWithDefaults() *UpdateNetworkAlertsSettingsRequest {
	this := UpdateNetworkAlertsSettingsRequest{}
	return &this
}

// GetDefaultDestinations returns the DefaultDestinations field value if set, zero value otherwise.
func (o *UpdateNetworkAlertsSettingsRequest) GetDefaultDestinations() UpdateNetworkAlertsSettingsRequestDefaultDestinations {
	if o == nil || IsNil(o.DefaultDestinations) {
		var ret UpdateNetworkAlertsSettingsRequestDefaultDestinations
		return ret
	}
	return *o.DefaultDestinations
}

// GetDefaultDestinationsOk returns a tuple with the DefaultDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkAlertsSettingsRequest) GetDefaultDestinationsOk() (*UpdateNetworkAlertsSettingsRequestDefaultDestinations, bool) {
	if o == nil || IsNil(o.DefaultDestinations) {
		return nil, false
	}
	return o.DefaultDestinations, true
}

// HasDefaultDestinations returns a boolean if a field has been set.
func (o *UpdateNetworkAlertsSettingsRequest) HasDefaultDestinations() bool {
	if o != nil && !IsNil(o.DefaultDestinations) {
		return true
	}

	return false
}

// SetDefaultDestinations gets a reference to the given UpdateNetworkAlertsSettingsRequestDefaultDestinations and assigns it to the DefaultDestinations field.
func (o *UpdateNetworkAlertsSettingsRequest) SetDefaultDestinations(v UpdateNetworkAlertsSettingsRequestDefaultDestinations) {
	o.DefaultDestinations = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *UpdateNetworkAlertsSettingsRequest) GetAlerts() []UpdateNetworkAlertsSettingsRequestAlertsInner {
	if o == nil || IsNil(o.Alerts) {
		var ret []UpdateNetworkAlertsSettingsRequestAlertsInner
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkAlertsSettingsRequest) GetAlertsOk() ([]UpdateNetworkAlertsSettingsRequestAlertsInner, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *UpdateNetworkAlertsSettingsRequest) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []UpdateNetworkAlertsSettingsRequestAlertsInner and assigns it to the Alerts field.
func (o *UpdateNetworkAlertsSettingsRequest) SetAlerts(v []UpdateNetworkAlertsSettingsRequestAlertsInner) {
	o.Alerts = v
}

// GetMuting returns the Muting field value if set, zero value otherwise.
func (o *UpdateNetworkAlertsSettingsRequest) GetMuting() UpdateNetworkAlertsSettingsRequestMuting {
	if o == nil || IsNil(o.Muting) {
		var ret UpdateNetworkAlertsSettingsRequestMuting
		return ret
	}
	return *o.Muting
}

// GetMutingOk returns a tuple with the Muting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkAlertsSettingsRequest) GetMutingOk() (*UpdateNetworkAlertsSettingsRequestMuting, bool) {
	if o == nil || IsNil(o.Muting) {
		return nil, false
	}
	return o.Muting, true
}

// HasMuting returns a boolean if a field has been set.
func (o *UpdateNetworkAlertsSettingsRequest) HasMuting() bool {
	if o != nil && !IsNil(o.Muting) {
		return true
	}

	return false
}

// SetMuting gets a reference to the given UpdateNetworkAlertsSettingsRequestMuting and assigns it to the Muting field.
func (o *UpdateNetworkAlertsSettingsRequest) SetMuting(v UpdateNetworkAlertsSettingsRequestMuting) {
	o.Muting = &v
}

func (o UpdateNetworkAlertsSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkAlertsSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultDestinations) {
		toSerialize["defaultDestinations"] = o.DefaultDestinations
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !IsNil(o.Muting) {
		toSerialize["muting"] = o.Muting
	}
	return toSerialize, nil
}

type NullableUpdateNetworkAlertsSettingsRequest struct {
	value *UpdateNetworkAlertsSettingsRequest
	isSet bool
}

func (v NullableUpdateNetworkAlertsSettingsRequest) Get() *UpdateNetworkAlertsSettingsRequest {
	return v.value
}

func (v *NullableUpdateNetworkAlertsSettingsRequest) Set(val *UpdateNetworkAlertsSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkAlertsSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkAlertsSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkAlertsSettingsRequest(val *UpdateNetworkAlertsSettingsRequest) *NullableUpdateNetworkAlertsSettingsRequest {
	return &NullableUpdateNetworkAlertsSettingsRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkAlertsSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkAlertsSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 22 February, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: v1.31.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20021Usage Usage, sent and received
type InlineResponse20021Usage struct {
	// Usage sent by the client
	Sent *float32 `json:"sent,omitempty"`
	// Usage received by the client
	Recv *float32 `json:"recv,omitempty"`
}

// NewInlineResponse20021Usage instantiates a new InlineResponse20021Usage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20021Usage() *InlineResponse20021Usage {
	this := InlineResponse20021Usage{}
	return &this
}

// NewInlineResponse20021UsageWithDefaults instantiates a new InlineResponse20021Usage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20021UsageWithDefaults() *InlineResponse20021Usage {
	this := InlineResponse20021Usage{}
	return &this
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *InlineResponse20021Usage) GetSent() float32 {
	if o == nil || isNil(o.Sent) {
		var ret float32
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Usage) GetSentOk() (*float32, bool) {
	if o == nil || isNil(o.Sent) {
    return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *InlineResponse20021Usage) HasSent() bool {
	if o != nil && !isNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given float32 and assigns it to the Sent field.
func (o *InlineResponse20021Usage) SetSent(v float32) {
	o.Sent = &v
}

// GetRecv returns the Recv field value if set, zero value otherwise.
func (o *InlineResponse20021Usage) GetRecv() float32 {
	if o == nil || isNil(o.Recv) {
		var ret float32
		return ret
	}
	return *o.Recv
}

// GetRecvOk returns a tuple with the Recv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Usage) GetRecvOk() (*float32, bool) {
	if o == nil || isNil(o.Recv) {
    return nil, false
	}
	return o.Recv, true
}

// HasRecv returns a boolean if a field has been set.
func (o *InlineResponse20021Usage) HasRecv() bool {
	if o != nil && !isNil(o.Recv) {
		return true
	}

	return false
}

// SetRecv gets a reference to the given float32 and assigns it to the Recv field.
func (o *InlineResponse20021Usage) SetRecv(v float32) {
	o.Recv = &v
}

func (o InlineResponse20021Usage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !isNil(o.Recv) {
		toSerialize["recv"] = o.Recv
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20021Usage struct {
	value *InlineResponse20021Usage
	isSet bool
}

func (v NullableInlineResponse20021Usage) Get() *InlineResponse20021Usage {
	return v.value
}

func (v *NullableInlineResponse20021Usage) Set(val *InlineResponse20021Usage) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20021Usage) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20021Usage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20021Usage(val *InlineResponse20021Usage) *NullableInlineResponse20021Usage {
	return &NullableInlineResponse20021Usage{value: val, isSet: true}
}

func (v NullableInlineResponse20021Usage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20021Usage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


